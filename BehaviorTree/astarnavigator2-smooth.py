""#line:17
import sys ,pygame ,math ,numpy ,random ,time ,copy #line:19
from pygame .locals import *#line:20
from constants import *#line:22
from utils import *#line:23
from core import *#line:24
class AStarNavigator2 (PathNetworkNavigator ):#line:33
	def computePath (O0O00OO0OO0O00OO0 ,O000O0OO0O0OOO0OO ,OOO0O0OO0OOOO0O00 ):#line:40
		O0O00OO0OO0O00OO0 .setPath (None )#line:41
		if O0O00OO0OO0O00OO0 .agent !=None and O0O00OO0OO0O00OO0 .world !=None :#line:43
			O0O00OO0OO0O00OO0 .source =O000O0OO0O0OOO0OO #line:44
			O0O00OO0OO0O00OO0 .destination =OOO0O0OO0OOOO0O00 #line:45
			if f21 (O000O0OO0O0OOO0OO ,OOO0O0OO0OOOO0O00 ,O0O00OO0OO0O00OO0 .world .getLinesWithoutBorders (),O0O00OO0OO0O00OO0 .world .getPoints (),O0O00OO0OO0O00OO0 .agent ):#line:49
				O0O00OO0OO0O00OO0 .agent .moveToTarget (OOO0O0OO0OOOO0O00 )#line:50
			else :#line:51
				OOOOO00OO00OO00OO =f20 (O000O0OO0O0OOO0OO ,O0O00OO0OO0O00OO0 .pathnodes ,O0O00OO0OO0O00OO0 .world .getLinesWithoutBorders (),O0O00OO0OO0O00OO0 .agent )#line:54
				O0OO0OOO0OO000O0O =f20 (OOO0O0OO0OOOO0O00 ,O0O00OO0OO0O00OO0 .pathnodes ,O0O00OO0OO0O00OO0 .world .getLinesWithoutBorders (),O0O00OO0OO0O00OO0 .agent )#line:55
				if OOOOO00OO00OO00OO !=None and O0OO0OOO0OO000O0O !=None :#line:56
					O0O0OOOO0OOOOO0O0 =f22 (O0O00OO0OO0O00OO0 .pathnetwork ,O0O00OO0OO0O00OO0 .world .getGates (),O0O00OO0OO0O00OO0 .world )#line:58
					O00OO0O0O0O0OOO0O =[]#line:59
					O00OO000O0O0OO0OO ,O00OO0O0O0O0OOO0O =f18 (OOOOO00OO00OO00OO ,O0OO0OOO0OO000O0O ,O0O0OOOO0OOOOO0O0 )#line:61
					if O00OO000O0O0OO0OO is not None and len (O00OO000O0O0OO0OO )>0 :#line:62
						O00OO000O0O0OO0OO =f13 (O000O0OO0O0OOO0OO ,OOO0O0OO0OOOO0O00 ,O00OO000O0O0OO0OO ,O0O00OO0OO0O00OO0 .world ,O0O00OO0OO0O00OO0 .agent )#line:64
						O0O00OO0OO0O00OO0 .setPath (O00OO000O0O0OO0OO )#line:66
						if O0O00OO0OO0O00OO0 .path is not None and len (O0O00OO0OO0O00OO0 .path )>0 :#line:67
							O0O0O00O0OOO0O00O =O0O00OO0OO0O00OO0 .path .pop (0 )#line:69
							O0O00OO0OO0O00OO0 .agent .moveToTarget (O0O0O00O0OOO0O00O )#line:70
		return None #line:71
	def checkpoint (O00OOOOOOO00O0O0O ):#line:75
		f15 (O00OOOOOOO00O0O0O )#line:76
		return None #line:77
	def smooth (O0OO0OOO0000OO0O0 ):#line:81
		return f12 (O0OO0OOO0000OO0O0 )#line:82
	def update (O00O0O00OO0O0O0OO ,O00OOOOO0O0OO0O00 ):#line:84
		f16 (O00O0O00OO0O0O0OO ,O00OOOOO0O0OO0O00 )#line:85
def f22 (OOO0OOO00OOOOOOOO ,O0000OO0O00O0O00O ,OO0O0O0OO000OO0OO ):#line:89
	OO00OOOO0OO0O0O00 =[]#line:90
	for O00O00OO00000O000 in OOO0OOO00OOOOOOOO :#line:91
		OO0OOOOO0OO00O00O =rayTraceWorld (O00O00OO00000O000 [0 ],O00O00OO00000O000 [1 ],O0000OO0O00O0O00O )#line:92
		if OO0OOOOO0OO00O00O ==None :#line:93
			OO00OOOO0OO0O0O00 .append (O00O00OO00000O000 )#line:94
	return OO00OOOO0OO0O0O00 #line:95
def f21 (O0OO000OO000OOO00 ,OO00OO00000OO00OO ,OO000OOOO0O0000O0 ,OO000000OO0O00OOO ,OOOOO00OO000OOOOO ):#line:104
    O0O00O0OOOO0O00OO =OOOOO00OO000OOOOO .getMaxRadius ()#line:106
    O0OO0O0O0O0OO0O00 =rayTraceWorld (O0OO000OO000OOO00 ,OO00OO00000OO00OO ,OO000OOOO0O0000O0 )#line:107
    if O0OO0O0O0O0OO0O00 is None :#line:108
        OO0O000OOOO0OOO0O =False #line:109
        for OO0OO000OOOOO0O0O in OO000000OO0O00OOO :#line:110
            if minimumDistance ((O0OO000OO000OOO00 ,OO00OO00000OO00OO ),OO0OO000OOOOO0O0O )<O0O00O0OOOO0O00OO :#line:111
                OO0O000OOOO0OOO0O =True #line:112
        if not OO0O000OOOO0OOO0O :#line:113
            return True #line:114
    return False #line:116
def f20 (O0O0O0O0O0O0O0OOO ,OOOO00000000O0OO0 ,O00OO0O00O0O000OO ,O00O000O0OOOO0000 ):#line:123
	O0000O0OO0O000O00 =None #line:124
	O0000O0OO0O000O00 =findClosestUnobstructed (O0O0O0O0O0O0O0OOO ,OOOO00000000O0OO0 ,O00OO0O00O0O000OO )#line:126
	return O0000O0OO0O000O00 #line:128
def f19 (OOO0O00O0OO0O0O0O ,O0OOOO0000OO000OO ,OO0O0OO0OO0OO00OO =lambda O0OO0OO00000O000O :O0OO0OO00000O000O ):#line:131
	for OOOOO000O000O000O in range (len (O0OOOO0000OO000OO )):#line:132
		if OO0O0OO0OO0OO00OO (OOO0O00O0OO0O0O0O )<OO0O0OO0OO0OO00OO (O0OOOO0000OO000OO [OOOOO000O000O000O ]):#line:133
			O0OOOO0000OO000OO .insert (OOOOO000O000O000O ,OOO0O00O0OO0O0O0O )#line:134
			return O0OOOO0000OO000OO #line:135
	O0OOOO0000OO000OO .append (OOO0O00O0OO0O0O0O )#line:136
	return O0OOOO0000OO000OO #line:137
def f18 (O000O0OOOO0O00O0O ,OOOOO0OOOOOOOO00O ,O00OO0O0OOOO0000O ):#line:147
	OO0O0O00O0O00O0OO =[]#line:148
	OOOO0OOOO00O000OO =[]#line:149
	O0O0O000O00O0OO00 =[]#line:150
	O000O0OOOO0O00O0O =(O000O0OOOO0O00O0O ,0 ,distance (O000O0OOOO0O00O0O ,OOOOO0OOOOOOOO00O ),None )#line:153
	O0O0O000O00O0OO00 =set ()#line:154
	O000OOO00OO0O00OO =set ()#line:155
	OOOO0OOOO00O000OO =[O000O0OOOO0O00O0O ]#line:156
	OOOOOO00OOO0OOOO0 =O000O0OOOO0O00O0O #line:157
	while OOOOOO00OOO0OOOO0 is not None and OOOOOO00OOO0OOOO0 [0 ]!=OOOOO0OOOOOOOO00O and len (OOOO0OOOO00O000OO )>0 :#line:160
		O0O0O000O00O0OO00 .add (OOOOOO00OOO0OOOO0 [0 ])#line:161
		O000OOO00OO0O00OO .add (OOOOOO00OOO0OOOO0 )#line:162
		OOOO0OOOO00O000OO .pop (0 )#line:163
		O0OOOOO0O00OO0O00 =f17 (OOOOOO00OOO0OOOO0 ,O00OO0O0OOOO0000O ,OOOOO0OOOOOOOO00O )#line:164
		for OOO00OO00OO0O00O0 in O0OOOOO0O00OO0O00 :#line:165
			if OOO00OO00OO0O00O0 [0 ]not in O0O0O000O00O0OO00 :#line:166
				f19 (OOO00OO00OO0O00O0 ,OOOO0OOOO00O000OO ,lambda O0O0OO00O00OOOO0O :O0O0OO00O00OOOO0O [1 ]+O0O0OO00O00OOOO0O [2 ])#line:167
		if len (OOOO0OOOO00O000OO )>0 :#line:168
			OOOOOO00OOO0OOOO0 =OOOO0OOOO00O000OO [0 ]#line:169
		else :#line:170
			OOOOOO00OOO0OOOO0 =None #line:171
	if OOOOOO00OOO0OOOO0 is not None :#line:174
		while OOOOOO00OOO0OOOO0 [3 ]is not None :#line:175
			OO0O0O00O0O00O0OO .append (OOOOOO00OOO0OOOO0 [0 ])#line:176
			O00OOOOO0OOO00OO0 =OOOOOO00OOO0OOOO0 [3 ]#line:177
			for O000OO0O00O0O000O in list (O000OOO00OO0O00OO ):#line:178
				if O00OOOOO0OOO00OO0 ==O000OO0O00O0O000O [0 ]:#line:179
					OOOOOO00OOO0OOOO0 =O000OO0O00O0O000O #line:180
					break #line:181
		OO0O0O00O0O00O0OO .append (OOOOOO00OOO0OOOO0 [0 ])#line:182
		OO0O0O00O0O00O0OO .reverse ()#line:183
	O0O0O000O00O0OO00 =list (O0O0O000O00O0OO00 )#line:184
	return OO0O0O00O0O00O0OO ,O0O0O000O00O0OO00 #line:186
def f17 (OO00O00OO0OO00000 ,O0000OOOOO0O00OO0 ,O00O00O0O00OO0OOO ):#line:189
	OO0O00O00000OO0O0 =[]#line:190
	for O0O000OOOOO0O00OO in O0000OOOOO0O00OO0 :#line:191
		if O0O000OOOOO0O00OO [0 ]==OO00O00OO0OO00000 [0 ]:#line:192
			OO0O00O00000OO0O0 .append ((O0O000OOOOO0O00OO [1 ],OO00O00OO0OO00000 [1 ]+distance (O0O000OOOOO0O00OO [0 ],O0O000OOOOO0O00OO [1 ]),distance (O0O000OOOOO0O00OO [1 ],O00O00O0O00OO0OOO ),OO00O00OO0OO00000 [0 ]))#line:193
		elif O0O000OOOOO0O00OO [1 ]==OO00O00OO0OO00000 [0 ]:#line:194
			OO0O00O00000OO0O0 .append ((O0O000OOOOO0O00OO [0 ],OO00O00OO0OO00000 [1 ]+distance (O0O000OOOOO0O00OO [0 ],O0O000OOOOO0O00OO [1 ]),distance (O0O000OOOOO0O00OO [0 ],O00O00O0O00OO0OOO ),OO00O00OO0OO00000 [0 ]))#line:195
	return OO0O00O00000OO0O0 #line:196
def f16 (OO00000O0O000OO0O ,O00O0O0O0O00O0O00 ):#line:200
	if OO00000O0O000OO0O .getPath ()is not None :#line:202
		O0O0OOO0O0OOOOOOO =OO00000O0O000OO0O .world .getGates ()#line:203
		OO00000OO00O00OOO =OO00000O0O000OO0O .agent .getLocation ()#line:204
		for O00O00O0OO0OO0O00 in OO00000O0O000OO0O .getPath ()+[OO00000O0O000OO0O .getDestination ()]:#line:205
			if OO00000OO00O00OOO is not None :#line:206
				O0O000OO0OO000OOO =rayTraceWorld (OO00000OO00O00OOO ,O00O00O0OO0OO0O00 ,O0O0OOO0O0OOOOOOO )#line:207
				if O0O000OO0OO000OOO is not None :#line:208
					OO00000O0O000OO0O .setPath (None )#line:210
					OO00000O0O000OO0O .agent .stopMoving ()#line:211
					return None #line:212
			OO00000OO00O00OOO =O00O00O0OO0OO0O00 #line:213
		return None #line:215
def f15 (OOO0OOO0O000000OO ):#line:220
	""#line:235
	return None #line:237
def f14 (O0OOO0OOO00O000OO ):#line:244
	if O0OOO0OOO00O000OO .path !=None and O0OOO0OOO00O000OO .agent .moveTarget !=O0OOO0OOO00O000OO .destination :#line:245
		O000O0OOO0OO0O00O =rayTraceWorld (O0OOO0OOO00O000OO .agent .rect .center ,O0OOO0OOO00O000OO .destination ,O0OOO0OOO00O000OO .world .getLines ())#line:246
		if O000O0OOO0OO0O00O ==None :#line:247
			OO000O000OO0OOO0O =False #line:248
			for OOOOO0000OOO00O0O in O0OOO0OOO00O000OO .world .getPoints ():#line:249
				if minimumDistance ((O0OOO0OOO00O000OO .agent .rect .center ,O0OOO0OOO00O000OO .destination ),OOOOO0000OOO00O0O )<O0OOO0OOO00O000OO .agent .getRadius ()*2.0 :#line:250
					OO000O000OO0OOO0O =True #line:251
			if not OO000O000OO0OOO0O :#line:252
				return True #line:253
	return False #line:254
def f13 (OO000O00O0O00OO00 ,O0OO00O000OOO000O ,OO000O00OO0OOO00O ,OOOOO00000OO00O0O ,O0OO00O00OO000OOO ):#line:261
	OO000O00OO0OOO00O =copy .deepcopy (OO000O00OO0OOO00O )#line:262
	O0O000OOOO0OO0000 =OOOOO00000OO00O0O .getLines ()#line:264
	OO0OO00O0O00OO0O0 =None #line:265
	OO0O00O00O00OOOOO =None #line:266
	for OOO0000OOO0000O0O in OO000O00OO0OOO00O :#line:267
		O000O0O0OO0O000OO =rayTraceWorld (OO000O00O0O00OO00 ,OOO0000OOO0000O0O ,O0O000OOOO0OO0000 )#line:268
		if O000O0O0OO0O000OO ==None :#line:269
			O000OO0OOO00O0OOO =False #line:270
			for O0OO0OO0000O0OO0O in OOOOO00000OO00O0O .getPoints ():#line:271
				if minimumDistance ((OO000O00O0O00OO00 ,OOO0000OOO0000O0O ),O0OO0OO0000O0OO0O )<OOOOO00000OO00O0O .agent .getRadius ()*2.0 :#line:272
					O000OO0OOO00O0OOO =True #line:273
			if not O000OO0OOO00O0OOO :#line:274
				OO0OO00O0O00OO0O0 =OOO0000OOO0000O0O #line:275
		if OO0O00O00O00OOOOO ==None :#line:276
			OO00OO0OO00O0000O =rayTraceWorld (OOO0000OOO0000O0O ,O0OO00O000OOO000O ,O0O000OOOO0OO0000 )#line:277
			if OO00OO0OO00O0000O ==None :#line:278
				O000OO0OOO00O0OOO =False #line:279
				for O0OO0OO0000O0OO0O in OOOOO00000OO00O0O .getPoints ():#line:280
					if minimumDistance ((O0OO00O000OOO000O ,OOO0000OOO0000O0O ),O0OO0OO0000O0OO0O )<OOOOO00000OO00O0O .agent .getRadius ()*2.0 :#line:281
						O000OO0OOO00O0OOO =True #line:282
				if not O000OO0OOO00O0OOO :#line:283
					OO0O00O00O00OOOOO =OOO0000OOO0000O0O #line:284
	OO0O0O00OO0000OO0 =[]#line:285
	OOO0OO0O0OOOO000O =False #line:286
	O0O0OOOO0OOOOO0OO =False #line:287
	for OOO0000OOO0000O0O in OO000O00OO0OOO00O :#line:288
		if O0O0OOOO0OOOOO0OO ==False :#line:289
			if OOO0OO0O0OOOO000O ==False :#line:290
				if OOO0000OOO0000O0O ==OO0OO00O0O00OO0O0 :#line:291
					OO0O0O00OO0000OO0 .append (OOO0000OOO0000O0O )#line:292
					OOO0OO0O0OOOO000O =True #line:293
			else :#line:294
				OO0O0O00OO0000OO0 .append (OOO0000OOO0000O0O )#line:295
			if OOO0000OOO0000O0O ==OO0O00O00O00OOOOO :#line:296
				OO0O0O00OO0000OO0 .append (OOO0000OOO0000O0O )#line:297
				O0O0OOOO0OOOOO0OO =True #line:298
	OO000O00OO0OOO00O =OO0O0O00OO0000OO0 #line:299
	return OO000O00OO0OOO00O #line:301
def f12 (OO000OO0O0O0O0O0O ):#line:308
	if OO000OO0O0O0O0O0O .path !=None and OO000OO0O0O0O0O0O .agent .moveTarget !=OO000OO0O0O0O0O0O .destination :#line:310
		if f14 (OO000OO0O0O0O0O0O ):#line:311
			OO000OO0O0O0O0O0O .path =[]#line:312
			OO000OO0O0O0O0O0O .agent .moveToTarget (OO000OO0O0O0O0O0O .destination )#line:313
			return True #line:314
		elif f11 (OO000OO0O0O0O0O0O ):#line:315
			O0O0OOO0O0OO0O000 =OO000OO0O0O0O0O0O .path .pop (0 )#line:316
			OO000OO0O0O0O0O0O .agent .moveToTarget (O0O0OOO0O0OO0O000 )#line:317
			return True #line:318
	return False #line:320
def f11 (OO00OO0OO0O0OOOOO ):#line:323
	if OO00OO0OO0O0OOOOO .path !=None and len (OO00OO0OO0O0OOOOO .path )>0 :#line:324
		OOOO0O0O0OOO0OOOO =OO00OO0OO0O0OOOOO .path [0 ]#line:325
		O0OOO00O0OO00O0O0 =rayTraceWorld (OO00OO0OO0O0OOOOO .agent .rect .center ,OOOO0O0O0OOO0OOOO ,OO00OO0OO0O0OOOOO .world .getLines ())#line:326
		if O0OOO00O0OO00O0O0 ==None :#line:327
			OO0O00O00O0OOOO0O =False #line:328
			for O0O0OOO000OOO0000 in OO00OO0OO0O0OOOOO .world .getPoints ():#line:329
				if minimumDistance ((OO00OO0OO0O0OOOOO .agent .rect .center ,OOOO0O0O0OOO0OOOO ),O0O0OOO000OOO0000 )<OO00OO0OO0O0OOOOO .agent .getRadius ()*2.0 :#line:330
					OO0O00O00O0OOOO0O =True #line:331
			if OO0O00O00O0OOOO0O :#line:332
				return False #line:333
			else :#line:334
				return True #line:335
	return False #line:336
