""#line:17
import sys ,pygame ,math ,numpy ,random ,time ,copy #line:19
from pygame .locals import *#line:20
from constants import *#line:22
from utils import *#line:23
from core import *#line:24
class AStarNavigator2 (PathNetworkNavigator ):#line:33
	def computePath (O0O000OOOOO0OO0OO ,OOO00OO0O000OOO00 ,O00OOO0OO00O0OOOO ):#line:40
		O0O000OOOOO0OO0OO .setPath (None )#line:41
		if O0O000OOOOO0OO0OO .agent !=None and O0O000OOOOO0OO0OO .world !=None :#line:43
			O0O000OOOOO0OO0OO .source =OOO00OO0O000OOO00 #line:44
			O0O000OOOOO0OO0OO .destination =O00OOO0OO00O0OOOO #line:45
			if clearShot (OOO00OO0O000OOO00 ,O00OOO0OO00O0OOOO ,O0O000OOOOO0OO0OO .world .getLinesWithoutBorders (),O0O000OOOOO0OO0OO .world .getPoints (),O0O000OOOOO0OO0OO .agent ):#line:49
				O0O000OOOOO0OO0OO .agent .moveToTarget (O00OOO0OO00O0OOOO )#line:50
			else :#line:51
				OO0OO0OOOO0OO0O00 =getOnPathNetwork (OOO00OO0O000OOO00 ,O0O000OOOOO0OO0OO .pathnodes ,O0O000OOOOO0OO0OO .world .getLinesWithoutBorders (),O0O000OOOOO0OO0OO .agent )#line:54
				OOOOOO000O0O000OO =getOnPathNetwork (O00OOO0OO00O0OOOO ,O0O000OOOOO0OO0OO .pathnodes ,O0O000OOOOO0OO0OO .world .getLinesWithoutBorders (),O0O000OOOOO0OO0OO .agent )#line:55
				if OO0OO0OOOO0OO0O00 !=None and OOOOOO000O0O000OO !=None :#line:56
					O0O0OO00O0OO00O00 =unobstructedNetwork (O0O000OOOOO0OO0OO .pathnetwork ,O0O000OOOOO0OO0OO .world .getGates (),O0O000OOOOO0OO0OO .world )#line:58
					OOOOO0O0OO0O0OO00 =[]#line:59
					OO00O0OOOO0OO0000 ,OOOOO0O0OO0O0OO00 =astar (OO0OO0OOOO0OO0O00 ,OOOOOO000O0O000OO ,O0O0OO00O0OO00O00 )#line:61
					if OO00O0OOOO0OO0000 is not None and len (OO00O0OOOO0OO0000 )>0 :#line:62
						OO00O0OOOO0OO0000 =shortcutPath (OOO00OO0O000OOO00 ,O00OOO0OO00O0OOOO ,OO00O0OOOO0OO0000 ,O0O000OOOOO0OO0OO .world ,O0O000OOOOO0OO0OO .agent )#line:64
						O0O000OOOOO0OO0OO .setPath (OO00O0OOOO0OO0000 )#line:66
						if O0O000OOOOO0OO0OO .path is not None and len (O0O000OOOOO0OO0OO .path )>0 :#line:67
							O000OO0O00OO0O00O =O0O000OOOOO0OO0OO .path .pop (0 )#line:69
							O0O000OOOOO0OO0OO .agent .moveToTarget (O000OO0O00OO0O00O )#line:70
		return None #line:71
	def checkpoint (O00OO0O000O00O00O ):#line:75
		myCheckpoint (O00OO0O000O00O00O )#line:76
		return None #line:77
	def smooth (O0O0OO00OOOO00OO0 ):#line:81
		return mySmooth (O0O0OO00OOOO00OO0 )#line:82
	def update (OO0O0OOO00O000OOO ,O0O0OOOOOOO00000O ):#line:84
		myUpdate (OO0O0OOO00O000OOO ,O0O0OOOOOOO00000O )#line:85
def unobstructedNetwork (O0O0O0O000O0O00O0 ,OO000OOO00O0OO00O ,OOOOO00OO00O00000 ):#line:89
	O00OO00OO0O000000 =[]#line:90
	for O000O0OOOO0O000OO in O0O0O0O000O0O00O0 :#line:91
		OOOOO0000OO000000 =rayTraceWorld (O000O0OOOO0O000OO [0 ],O000O0OOOO0O000OO [1 ],OO000OOO00O0OO00O )#line:92
		if OOOOO0000OO000000 ==None :#line:93
			O00OO00OO0O000000 .append (O000O0OOOO0O000OO )#line:94
	return O00OO00OO0O000000 #line:95
def clearShot (O0O0OOO000000000O ,OOO0O0O00O000O000 ,OO0O0O000OO00O00O ,OO00O00O000O00OO0 ,OOOO0O0OO000O0O0O ):#line:104
    O000O00OOO0OOOOO0 =OOOO0O0OO000O0O0O .getMaxRadius ()#line:106
    OO0O0O0O00000O000 =rayTraceWorld (O0O0OOO000000000O ,OOO0O0O00O000O000 ,OO0O0O000OO00O00O )#line:107
    if OO0O0O0O00000O000 is None :#line:108
        O0OOOOOOO0OOOOOOO =False #line:109
        for OOOOOO000OO0O00O0 in OO00O00O000O00OO0 :#line:110
            if minimumDistance ((O0O0OOO000000000O ,OOO0O0O00O000O000 ),OOOOOO000OO0O00O0 )<O000O00OOO0OOOOO0 :#line:111
                O0OOOOOOO0OOOOOOO =True #line:112
        if not O0OOOOOOO0OOOOOOO :#line:113
            return True #line:114
    return False #line:116
def getOnPathNetwork (OOO0O000OO0OOOO0O ,OOOO00OOOO00OOOOO ,OOO00OOOOO0O000O0 ,O0OO00000OO00000O ):#line:123
	OO0OO0O0O000000O0 =None #line:124
	OO0OO0O0O000000O0 =findClosestUnobstructed (OOO0O000OO0OOOO0O ,OOOO00OOOO00OOOOO ,OOO00OOOOO0O000O0 )#line:126
	return OO0OO0O0O000000O0 #line:128
def insert (O00O0O00000OO000O ,O0OOOO0O0O00OOO00 ,func =lambda O00OOO0000O000O00 :O00OOO0000O000O00 ):#line:131
	for O00O00O0O000OOOO0 in range (len (O0OOOO0O0O00OOO00 )):#line:132
		if func (O00O0O00000OO000O )<func (O0OOOO0O0O00OOO00 [O00O00O0O000OOOO0 ]):#line:133
			O0OOOO0O0O00OOO00 .insert (O00O00O0O000OOOO0 ,O00O0O00000OO000O )#line:134
			return O0OOOO0O0O00OOO00 #line:135
	O0OOOO0O0O00OOO00 .append (O00O0O00000OO000O )#line:136
	return O0OOOO0O0O00OOO00 #line:137
def astar (O00O00O000O000000 ,O00OO00O00O0OO00O ,OOOO000O000000O0O ):#line:147
	O000OOOO0OO0O00OO =[]#line:148
	OO0O000O0OO0OOO00 =[]#line:149
	OO00O0O000000O0OO =[]#line:150
	O00O00O000O000000 =(O00O00O000O000000 ,0 ,distance (O00O00O000O000000 ,O00OO00O00O0OO00O ),None )#line:153
	OO00O0O000000O0OO =set ()#line:154
	O0000OOO0OO0O0O0O =set ()#line:155
	OO0O000O0OO0OOO00 =[O00O00O000O000000 ]#line:156
	O0000OO0O0000O0OO =O00O00O000O000000 #line:157
	while O0000OO0O0000O0OO is not None and O0000OO0O0000O0OO [0 ]!=O00OO00O00O0OO00O and len (OO0O000O0OO0OOO00 )>0 :#line:160
		OO00O0O000000O0OO .add (O0000OO0O0000O0OO [0 ])#line:161
		O0000OOO0OO0O0O0O .add (O0000OO0O0000O0OO )#line:162
		OO0O000O0OO0OOO00 .pop (0 )#line:163
		OOO0O000O0OO0OO0O =successors (O0000OO0O0000O0OO ,OOOO000O000000O0O ,O00OO00O00O0OO00O )#line:164
		for OO0OOOOOOO0O0OOO0 in OOO0O000O0OO0OO0O :#line:165
			if OO0OOOOOOO0O0OOO0 [0 ]not in OO00O0O000000O0OO :#line:166
				insert (OO0OOOOOOO0O0OOO0 ,OO0O000O0OO0OOO00 ,lambda O00OO00OO0O0OO0OO :O00OO00OO0O0OO0OO [1 ]+O00OO00OO0O0OO0OO [2 ])#line:167
		if len (OO0O000O0OO0OOO00 )>0 :#line:168
			O0000OO0O0000O0OO =OO0O000O0OO0OOO00 [0 ]#line:169
		else :#line:170
			O0000OO0O0000O0OO =None #line:171
	if O0000OO0O0000O0OO is not None :#line:174
		while O0000OO0O0000O0OO [3 ]is not None :#line:175
			O000OOOO0OO0O00OO .append (O0000OO0O0000O0OO [0 ])#line:176
			OOO0O0OO0OOOO000O =O0000OO0O0000O0OO [3 ]#line:177
			for O00OO000OOOOOOO0O in list (O0000OOO0OO0O0O0O ):#line:178
				if OOO0O0OO0OOOO000O ==O00OO000OOOOOOO0O [0 ]:#line:179
					O0000OO0O0000O0OO =O00OO000OOOOOOO0O #line:180
					break #line:181
		O000OOOO0OO0O00OO .append (O0000OO0O0000O0OO [0 ])#line:182
		O000OOOO0OO0O00OO .reverse ()#line:183
	OO00O0O000000O0OO =list (OO00O0O000000O0OO )#line:184
	return O000OOOO0OO0O00OO ,OO00O0O000000O0OO #line:186
def successors (OOO0OO00OO0OOO000 ,O000O0O0O0O0O00OO ,O000OO000O0O0000O ):#line:189
	OO0O0OOO00000O0O0 =[]#line:190
	for O0O00000O000O000O in O000O0O0O0O0O00OO :#line:191
		if O0O00000O000O000O [0 ]==OOO0OO00OO0OOO000 [0 ]:#line:192
			OO0O0OOO00000O0O0 .append ((O0O00000O000O000O [1 ],OOO0OO00OO0OOO000 [1 ]+distance (O0O00000O000O000O [0 ],O0O00000O000O000O [1 ]),distance (O0O00000O000O000O [1 ],O000OO000O0O0000O ),OOO0OO00OO0OOO000 [0 ]))#line:193
		elif O0O00000O000O000O [1 ]==OOO0OO00OO0OOO000 [0 ]:#line:194
			OO0O0OOO00000O0O0 .append ((O0O00000O000O000O [0 ],OOO0OO00OO0OOO000 [1 ]+distance (O0O00000O000O000O [0 ],O0O00000O000O000O [1 ]),distance (O0O00000O000O000O [0 ],O000OO000O0O0000O ),OOO0OO00OO0OOO000 [0 ]))#line:195
	return OO0O0OOO00000O0O0 #line:196
def myUpdate (O0OOOOOOO0O00OOOO ,OO0O0O00OOO0OOOO0 ):#line:200
	if O0OOOOOOO0O00OOOO .getPath ()is not None :#line:202
		O000OOO000O0OOOOO =O0OOOOOOO0O00OOOO .world .getGates ()#line:203
		O00OOOO0OO00O0O00 =O0OOOOOOO0O00OOOO .agent .getLocation ()#line:204
		for OO0O00O00OO0O0OO0 in O0OOOOOOO0O00OOOO .getPath ()+[O0OOOOOOO0O00OOOO .getDestination ()]:#line:205
			if O00OOOO0OO00O0O00 is not None :#line:206
				OO000OOO0O000OOOO =rayTraceWorld (O00OOOO0OO00O0O00 ,OO0O00O00OO0O0OO0 ,O000OOO000O0OOOOO )#line:207
				if OO000OOO0O000OOOO is not None :#line:208
					O0OOOOOOO0O00OOOO .setPath (None )#line:210
					O0OOOOOOO0O00OOOO .agent .stopMoving ()#line:211
					return None #line:212
			O00OOOO0OO00O0O00 =OO0O00O00OO0O0OO0 #line:213
		return None #line:215
def myCheckpoint (O0O0O0OO0O0O0OOO0 ):#line:220
	""#line:235
	return None #line:237
def myCheckForShortcut (O0OOO0O0O0O0O0OOO ):#line:244
	if O0OOO0O0O0O0O0OOO .path !=None and O0OOO0O0O0O0O0OOO .agent .moveTarget !=O0OOO0O0O0O0O0OOO .destination :#line:245
		OO000O0OOOOOO0000 =rayTraceWorld (O0OOO0O0O0O0O0OOO .agent .rect .center ,O0OOO0O0O0O0O0OOO .destination ,O0OOO0O0O0O0O0OOO .world .getLines ())#line:246
		if OO000O0OOOOOO0000 ==None :#line:247
			OOOO00OO0O00O0O0O =False #line:248
			for O00OO0O0O0O0000O0 in O0OOO0O0O0O0O0OOO .world .getPoints ():#line:249
				if minimumDistance ((O0OOO0O0O0O0O0OOO .agent .rect .center ,O0OOO0O0O0O0O0OOO .destination ),O00OO0O0O0O0000O0 )<O0OOO0O0O0O0O0OOO .agent .getRadius ()*2.0 :#line:250
					OOOO00OO0O00O0O0O =True #line:251
			if not OOOO00OO0O00O0O0O :#line:252
				return True #line:253
	return False #line:254
def shortcutPath (OOO0O0O00OO00O0O0 ,O0OOO0000OOOO0O00 ,OO00000O00OO0000O ,O0OOO0O0OO0OOOO00 ,OO000O0O0OOO0000O ):#line:261
	OO00000O00OO0000O =copy .deepcopy (OO00000O00OO0000O )#line:262
	OOO0OOOO00O00OO0O =O0OOO0O0OO0OOOO00 .getLines ()#line:264
	OO00O0000O0O0O0OO =None #line:265
	OO0OOOO0000O00OOO =None #line:266
	for O00OOO00000O00OO0 in OO00000O00OO0000O :#line:267
		OO000O0OO000O0000 =rayTraceWorld (OOO0O0O00OO00O0O0 ,O00OOO00000O00OO0 ,OOO0OOOO00O00OO0O )#line:268
		if OO000O0OO000O0000 ==None :#line:269
			O0O0O0OOO0O0000OO =False #line:270
			for O0OOOOOO00OOOO000 in O0OOO0O0OO0OOOO00 .getPoints ():#line:271
				if minimumDistance ((OOO0O0O00OO00O0O0 ,O00OOO00000O00OO0 ),O0OOOOOO00OOOO000 )<O0OOO0O0OO0OOOO00 .agent .getRadius ()*2.0 :#line:272
					O0O0O0OOO0O0000OO =True #line:273
			if not O0O0O0OOO0O0000OO :#line:274
				OO00O0000O0O0O0OO =O00OOO00000O00OO0 #line:275
		if OO0OOOO0000O00OOO ==None :#line:276
			O0O00O0O0O0000OOO =rayTraceWorld (O00OOO00000O00OO0 ,O0OOO0000OOOO0O00 ,OOO0OOOO00O00OO0O )#line:277
			if O0O00O0O0O0000OOO ==None :#line:278
				O0O0O0OOO0O0000OO =False #line:279
				for O0OOOOOO00OOOO000 in O0OOO0O0OO0OOOO00 .getPoints ():#line:280
					if minimumDistance ((O0OOO0000OOOO0O00 ,O00OOO00000O00OO0 ),O0OOOOOO00OOOO000 )<O0OOO0O0OO0OOOO00 .agent .getRadius ()*2.0 :#line:281
						O0O0O0OOO0O0000OO =True #line:282
				if not O0O0O0OOO0O0000OO :#line:283
					OO0OOOO0000O00OOO =O00OOO00000O00OO0 #line:284
	OOO0OOO0OO0000000 =[]#line:285
	OO000OOOOO0O0O00O =False #line:286
	O00OOOOO0O00OOOO0 =False #line:287
	for O00OOO00000O00OO0 in OO00000O00OO0000O :#line:288
		if O00OOOOO0O00OOOO0 ==False :#line:289
			if OO000OOOOO0O0O00O ==False :#line:290
				if O00OOO00000O00OO0 ==OO00O0000O0O0O0OO :#line:291
					OOO0OOO0OO0000000 .append (O00OOO00000O00OO0 )#line:292
					OO000OOOOO0O0O00O =True #line:293
			else :#line:294
				OOO0OOO0OO0000000 .append (O00OOO00000O00OO0 )#line:295
			if O00OOO00000O00OO0 ==OO0OOOO0000O00OOO :#line:296
				OOO0OOO0OO0000000 .append (O00OOO00000O00OO0 )#line:297
				O00OOOOO0O00OOOO0 =True #line:298
	OO00000O00OO0000O =OOO0OOO0OO0000000 #line:299
	return OO00000O00OO0000O #line:301
def mySmooth (O00OO00O00OOO0O0O ):#line:308
	if O00OO00O00OOO0O0O .path !=None and O00OO00O00OOO0O0O .agent .moveTarget !=O00OO00O00OOO0O0O .destination :#line:310
		if myCheckForShortcut (O00OO00O00OOO0O0O ):#line:311
			O00OO00O00OOO0O0O .path =[]#line:312
			O00OO00O00OOO0O0O .agent .moveToTarget (O00OO00O00OOO0O0O .destination )#line:313
			return True #line:314
		elif canSmooth (O00OO00O00OOO0O0O ):#line:315
			OO0O0OOOOOO00O000 =O00OO00O00OOO0O0O .path .pop (0 )#line:316
			O00OO00O00OOO0O0O .agent .moveToTarget (OO0O0OOOOOO00O000 )#line:317
			return True #line:318
	return False #line:320
def canSmooth (O0OOO0000O00000OO ):#line:323
	if O0OOO0000O00000OO .path !=None and len (O0OOO0000O00000OO .path )>0 :#line:324
		O0OO0O0000OOO0OOO =O0OOO0000O00000OO .path [0 ]#line:325
		O00OOO0O0O0OO0O0O =rayTraceWorld (O0OOO0000O00000OO .agent .rect .center ,O0OO0O0000OOO0OOO ,O0OOO0000O00000OO .world .getLines ())#line:326
		if O00OOO0O0O0OO0O0O ==None :#line:327
			OOOO000000OOO00OO =False #line:328
			for O0OOOO00O0OOO00O0 in O0OOO0000O00000OO .world .getPoints ():#line:329
				if minimumDistance ((O0OOO0000O00000OO .agent .rect .center ,O0OO0O0000OOO0OOO ),O0OOOO00O0OOO00O0 )<O0OOO0000O00000OO .agent .getRadius ()*2.0 :#line:330
					OOOO000000OOO00OO =True #line:331
			if OOOO000000OOO00OO :#line:332
				return False #line:333
			else :#line:334
				return True #line:335
	return False #line:336
